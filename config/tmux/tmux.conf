#########################
#	TMUX CONFIG	#
#########################

# Save tmux version numbr **DOES NOT WORK - FIX**
run-shell -b	'tmux setenv-g TMUX_VERSION $(tmux -V | sed -En \
					"s/^tmux[^[0-9]*([.0-9]+).*/\1/p") &> /dev/null || true'

# Start windows and panes at 1, not 0 and auto renumber windows
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# ESC delay after prefix (ms)
set -sg escape-time 250

# Tmux doesn't use .bashrc, .zshrc, etc. so set extra path stuff here
set-env -g PATH "$PATH:$HOME/.local/bin"

# Remap prefix (only if ok with jump to start of line being gone)
#unbind C-b
#set-option -g prefix C-b,C-a
#set-option -g prefix C-b
# prefix2 is for servers (can trigger manually with `tmux set prefix2 'C-\'`)
#set-option -g prefix2 C-'\'
#bind-key C-a send-prefix

# Use show colours good
set -ga terminal-overrides 'xterm-256color:Tc'
set -saq terminal-features 'xterm-256color:RGB'
set -ga terminal-overrides 'foot:Tc'
set -saq terminal-features 'foot:RGB'
set -ga terminal-overrides 'alacritty:Tc'
set -saq terminal-features 'alacritty:RGB'

# Colours
# [wiki colours](https://github.com/tmux/tmux/wiki/Getting-Started#colours-and-styles)
set -g status-style 'bg=#333333 fg=#5eacd3'
#set -g status-style 'bg=#333333 fg=cyan'
set -g message-style 'bg=#5eacd3 fg=black'
set -g pane-border-style 'fg=#333333'
set -g pane-active-border-style 'bg=default fg=#5eacd3'

# Status line contents
set -g status-right "#(batterylvl 2>/dev/null) \"#h\" %H:%M %d-%b-%g"

# Set terminal title to '<current running command> - tmux'
set -g set-titles-string '#{pane_current_command}'

# Easy config reload (maybe change to XDG_HOME?
bind-key -T prefix r source-file ~/.config/tmux/tmux.conf \; \
	display-message 'config reloaded'

# open window with fuzzy find
bind-key -T prefix f run-shell "type tmux-sessionizer > /dev/null \
	&& tmux neww tmux-sessionizer \
	|| tmux display-message -d 1000 'error: could not find tmux-sessionizer'"


bind -r n next-window
bind -r p previous-window
bind -r N swap-window -t +1 \; next-window
bind -r P swap-window -t -1 \; previous-window

# vim-like pane switching
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# Show default keybinds with <prefix> ?

# open todo, scratchpad in nvim/vim/vi
bind -T prefix T neww -c "#{pane_current_path}" \
	"[[ -e TODO.md ]] && nvim TODO.md || vim TODO.md || vi TODO.md \
	|| read -n 1 -p 'No TODO.md file in current path'"
bind -T prefix S neww -c "#{pane_current_path}" "nvim ~/scratchpad.md \
	|| vim ~/scratchpad.md || vi ~/scratchpad.md"

bind -T prefix C-S setw synchronize-panes

# vim bindings for selection
# # Old tmux
# if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' {
# 	setw -g mode-keys vi
# 	bind-key Escape copy-mode
# 	bind-key -t vi-copy v begin-selection
# 	bind-key -t vi-copy V select-line
# 	bind-key -t vi-copy y copy-pipe 'wl-copy'
# }
# # New tmux
# if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' {
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi y if-shell -b '[[ "$XDG_SESSION_TYPE" = "wayland" ]]' \
	send -X copy-pipe-and-cancel 'wl-copy' \; \
#	display 'waaay'
bind-key -T copy-mode-vi y if-shell -b '[[ "$XDG_SESSION_TYPE" = "x11" ]]' \
	send -X copy-pipe-and-cancel \
		'xclip -in -selection clipboard'\; \
#		display 'x'

